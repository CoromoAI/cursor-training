---
description:
globs:
alwaysApply: false
---

# README.md 自動更新ルール

プロジェクト構造の変更を検知したら、以下の手順でREADME.mdを更新してください：

## 📋 更新手順

### 1. プロジェクト構造の分析
- 全caseディレクトリの内容を確認
- 新規追加されたファイル・ディレクトリを検出
- 削除されたファイル・ディレクトリを検出
- 各caseの技術スタックと機能を分析

### 2. README.md構造に従った更新

以下のセクションを順番に更新：

#### A. プロジェクト構造図
```
cursor-training/
├── README.md                    # このファイル
├── .cursor/                     # Cursor設定ファイル
│   └── rules/                   # Cursor Rules設定
├── case1/                       # [目的]
│   └── [ファイル構造]
├── case2/                       # [目的]
│   └── [ファイル構造]
...
```

#### B. 学習ケース詳細
各caseについて以下の形式で記述：
```markdown
### Case X: [タイトル] 
- **目的**: [学習目的]
- **技術**: [使用技術]
- **機能/内容**: 
  - [機能1]
  - [機能2]
```

#### C. 技術スタック
- 使用されている全技術を収集
- 共通技術と特定case専用技術を整理

#### D. その他セクション
- コーディング規約の更新
- デザインシステムの追加・変更
- 学習の進め方の調整

### 3. 品質チェック
- 絵文字の適切な使用（📁📋🎯🛠️📝🎨🚀📚🎯📝）
- 日本語の正確性
- マークダウンの構文チェック
- 一貫したフォーマット

### 4. 追加ルール
- 新規caseが追加された場合は学習の進め方も更新
- 技術の説明は具体的に（ES6+、HTML5、CSS3等）
- ファイル名は正確に記載
- コメントは簡潔で分かりやすく

## 🎯 注意事項
- 既存の構造とスタイルを維持
- 新規追加時は既存caseとの一貫性を保つ
- 削除時は関連する説明も適切に更新
- 学習の難易度順序を考慮した並び順